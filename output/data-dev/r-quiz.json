[
    {
        "question": "Q1. How does a matrix differ from a data frame?",
        "options": [
            "A matrix may contain numeric values only.",
            "A matrix must not be singular.",
            "A data frame may contain variables that have different modes.",
            "A data frame may contain variables of different lengths."
        ],
        "_ps": 2
    },
    {
        "question": "Q2. What value does this statement return?\n`unclass(as.Date(\"1971-01-01\"))`",
        "options": [
            "ss(as.Date(\"1971-01-01\"))`",
            "1",
            "365",
            "4"
        ],
        "_ps": 2
    },
    {
        "question": "Q3. What do you use to take an object such as a data frame out of the workspace?",
        "options": [
            "remove()",
            "erase()",
            "detach()",
            "delete()"
        ],
        "_ps": 0
    },
    {
        "question": "Q4. Review the following code. What is the result of line 3?\n```\nxvect<-c(1,2,3)\nxvect[2] <- \"2\"\nxvect\n```",
        "options": [
            "",
            "-c(1,2,3)",
            "2] <- \"2\"",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q5. The variable height is a numeric vector in the code below. Which statement returns the value 35?",
        "options": [
            "`height(length(height))`",
            "`height[length(height)]`",
            "`height[length[height]]`",
            "`height(5)`"
        ],
        "_ps": 1
    },
    {
        "question": "Q6. In the image below, the data frame is named rates. The statement `sd(rates[, 2])` returns 39. As what does R regard Ellen's product ratings?\n![Image](https://i.ibb.co/jvPPSRk/Captura-de-pantalla-2020-07-14-a-las-20-58-09.png)",
        "options": [
            "e](https://i.ibb.co/jvPPSRk/Captura-de-pantalla-2020-07-14-a-las-20-58-09.png)",
            "sample with replacement",
            "population",
            "trimmed sample"
        ],
        "_ps": -1
    },
    {
        "question": "Q7. Which choice does R regard as an acceptable name for a variable?",
        "options": [
            "`Var_A!`",
            "`\\_VarA`",
            "`.2Var_A`",
            "`Var2_A`"
        ],
        "_ps": 3
    },
    {
        "question": "Q8. What is the principal difference between an array and a matrix?",
        "options": [
            "A matrix has two dimensions, while an array can have three or more dimensions.",
            "An array is a subtype of the data frame, while a matrix is a separate type entirely.",
            "A matrix can have columns of different lengths, but an array's columns must all be the same length.",
            "A matrix may contain numeric values only, while an array can mix different types of values."
        ],
        "_ps": 0
    },
    {
        "question": "Q9. Which is not a property of lists and vectors?",
        "options": [
            "type",
            "length",
            "attributes",
            "scalar"
        ],
        "_ps": 3
    },
    {
        "question": "Q10. In the image below, the data frame on lines 1 through 4 is named StDf. State and Capital are both factors. Which statement returns the results shown on lines 6 and 7?\n![Image](https://i.ibb.co/8DL1HCV/Captura-de-pantalla-2020-07-14-a-las-18-33-34.png)",
        "options": [
            "e](https://i.ibb.co/8DL1HCV/Captura-de-pantalla-2020-07-14-a-las-18-33-34.png)",
            "StDf[1:2,-3]",
            "StDf[1:2,1]",
            "StDf[1:2,]"
        ],
        "_ps": 2
    },
    {
        "question": "Q11. Which function displays the first five rows of the data frame named pizza?",
        "options": [
            "BOF(pizza, 5)",
            "first(pizza, 5)",
            "top(pizza, 5)",
            "head(pizza, 5)"
        ],
        "_ps": 3
    },
    {
        "question": "Q12. You accidentally display a large data frame on the R console, losing all the statements you entered during the current session. What is the best way to get the prior 25 statements back?",
        "options": [
            "console(-25)",
            "console(reverse=TRUE)",
            "history()",
            "history(max.show = 25)"
        ],
        "_ps": 3
    },
    {
        "question": "Q13. d.pizza is a data frame. It's a column named temperature contains only numbers. If you extract temperature using the [] accessors, its class defaults to numeric. How can you access temperature so that it retains the class of data.frame?\n```\n> class( d.pizza[ , \"temperature\" ] )\n> \"numeric\"\n```",
        "options": [
            "",
            "s( d.pizza[ , \"temperature\" ] )",
            "eric\"",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q14. What does c contain?\n```\na <- c(3,3,6.5,8)\nb <- c(7,2,5.5,10)\nc <- a < b\n```",
        "options": [
            "",
            "(3,3,6.5,8)",
            "(7,2,5.5,10)",
            " < b"
        ],
        "_ps": -1
    },
    {
        "question": "Q15. Review the statements below. Does the use of the dim function change the class of y, and if so what is y's new class?\n```\n> y <- 1:9\n> dim(y) <- c(3,3)\n```",
        "options": [
            "",
            " 1:9",
            "y) <- c(3,3)",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q16. What is `mydf$y` in this code?\n`mydf <- data.frame(x=1:3, y=c(\"a\",\"b\",\"c\"), stringAsFactors=FALSE)`",
        "options": [
            "<- data.frame(x=1:3, y=c(\"a\",\"b\",\"c\"), stringAsFactors=FALSE)`",
            "list",
            "string",
            "factor"
        ],
        "_ps": -1
    },
    {
        "question": "Q17. How does a vector differ from a list?",
        "options": [
            "Vectors are used only for numeric data, while lists are useful for both numeric and string data.",
            "Vectors and lists are the same thing and can be used interchangeably.",
            "A vector contains items of a single data type, while a list can contain items of different data types.",
            "Vectors are like arrays, while lists are like data frames."
        ],
        "_ps": 2
    },
    {
        "question": "Q18. What statement shows the objects on your workspace?",
        "options": [
            "list.objects()",
            "print.objects()",
            "getws()",
            "ls()"
        ],
        "_ps": 3
    },
    {
        "question": "Q19. What function joins two or more column vectors to form a data frame?",
        "options": [
            "rbind()",
            "cbind()",
            "bind()",
            "coerce()"
        ],
        "_ps": 1
    },
    {
        "question": "Q20. Review line 1 below. What does the statement in line 2 return?\n```\n1 mylist <- list(1,2,\"C\",4,5)\n2 unlist(mylist)\n```",
        "options": [
            "",
            "st <- list(1,2,\"C\",4,5)",
            "st(mylist)",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q21. What is the value of y in this code?\n```\nx <- NA\ny <- x/1\n```",
        "options": [
            "",
            "A",
            "/1",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q22. Two variable in the mydata data frame are named Var1 and Var2. How do you tell a bivariate function, such as cor.test, which two variables you want to analyze?",
        "options": [
            "`cor.test(Var1 ~ Var2)`",
            "`cor.test(mydata$(Var1,Var2))`",
            "`cor.test(mydata$Var1,mydata$Var2)`",
            "`cor.test(Var1,Var2, mydata)`"
        ],
        "_ps": 2
    },
    {
        "question": "Q23. A data frame named d.pizza is part of the DescTools package. A statement is missing from the following R code and an error is therefore likely to occur. Which statement is missing?\n```\nlibrary(DescTools)\ndeliver <- aggregate(count,by=list(area,driver), FUN=mean)\nprint(deliver)\n```",
        "options": [
            "",
            "y(DescTools)",
            "r <- aggregate(count,by=list(area,driver), FUN=mean)",
            "deliver)"
        ],
        "_ps": -1
    },
    {
        "question": "Q24. How to name rows and columns in DataFrames and Matrices F in R?",
        "options": [
            "data frame: names() and rownames() matrix: colnames() and row.names()",
            "data frame: names() and row.names() matrix: dimnames() (not sure)",
            "data frame: colnames() and row.names() matrix: names() and rownames()",
            "data frame: colnames() and rownames() matrix: names() and row.names()"
        ],
        "_ps": 1
    },
    {
        "question": "Q25. Which set of two statements-followed by the cbind() function-results in a data frame named vbound?\n```\nv1<-list(1,2,3)\nv2<-list(c(4,5,6))\nvbound<-cbind(v1,v2)\n```\n```\nv1<-c(1,2,3)\nv2<-list(4,5,6))\nvbound<-cbind(v1,v2)\n```\n```\nv1<-c(1,2,3)\nv2<-c(4,5,6))\nvbound<-cbind(v1,v2)\n```\n#### Q26. ournames is a character vector. What values does the statement below return to Cpeople?\n`Cpeople <- ournames %in% grep(\"^C\", ournames, value=TRUE)`",
        "options": [
            "",
            "",
            "st(1,2,3)",
            "st(c(4,5,6))"
        ],
        "_ps": -1
    },
    {
        "question": "Q26. ournames is a character vector. What values does the statement below return to Cpeople?\n`Cpeople <- ournames %in% grep(\"^C\", ournames, value=TRUE)`",
        "options": [
            "le <- ournames %in% grep(\"^C\", ournames, value=TRUE)`",
            "records where the first character is a C",
            "any record with a value containing a C",
            "TRUE or FALSE, depending on whether any character in ournames is C"
        ],
        "_ps": -1
    },
    {
        "question": "Q27. What is the value of names(v[4])?\n```\nv <- 1:3\nnames(v) <- c(\"a\", \"b\", \"c\")\nv[4] <- 4\n```",
        "options": [
            "",
            ":3",
            "v) <- c(\"a\", \"b\", \"c\")",
            "- 4"
        ],
        "_ps": -1
    },
    {
        "question": "Q28. Which of the following statements doesn't yield the code output below. Review the following code. What is the result of line 3?\n```\nx <- c(1, 2, 3, 4)\nOutput: [1] 2 3 4\n```",
        "options": [
            "",
            "(1, 2, 3, 4)",
            ": [1] 2 3 4",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q29. Given DFMerged <- merge(DF1, DF2) and the image below, how manu rows are in DFMerged?\n![image](https://user-images.githubusercontent.com/52632898/139964478-9806a163-76b2-4f99-97bc-c925fdf6e388.png)",
        "options": [
            "e](https://user-images.githubusercontent.com/52632898/139964478-9806a163-76b2-4f99-97bc-c925fdf6e388.png)",
            "6",
            "9",
            "3"
        ],
        "_ps": -1
    },
    {
        "question": "Q30. What does R return in response to the final statement?\n```\nx<-5:8\nnames(x)<-letters[5:8]\nx\n```\n      \"5\" \"6\" \"7\" \"8\"",
        "options": [
            "",
            "",
            "x)<-letters[5:8]",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q31. How do you return \"October\" from x in this code?\n```\nx<-as.Date(\"2018-10-01\")\n```",
        "options": [
            "",
            "Date(\"2018-10-01\")",
            "",
            "attr()"
        ],
        "_ps": -1
    },
    {
        "question": "Q32. How will R respond to the last line of this code?\n```\nfact<-factor(c(\"Rep\",\"Dem\",\"Dem\",\"Rep\"))\nfact\n[1] Rep Dem Dem Rep\nLevels: Rep Dem\nfact[2]<-\"Ind\"\n```",
        "options": [
            "",
            "factor(c(\"Rep\",\"Dem\",\"Dem\",\"Rep\"))",
            "",
            "p Dem Dem Rep"
        ],
        "_ps": -1
    },
    {
        "question": "Q33. What does R return?\n```\nStartDate<- as.Date(\"2020/2/28\")\nStopDate<- as.Date(\"2020/3/1\")\nStopDate-StartDate\n```",
        "options": [
            "",
            "ate<- as.Date(\"2020/2/28\")",
            "te<- as.Date(\"2020/3/1\")",
            "te-StartDate"
        ],
        "_ps": -1
    },
    {
        "question": "Q34. What does the expression `mtrx * mtrx` do ?\n```\n> mtrx <- matrix( c(3,5,8,4), nrow= 2,ncol=2,byrow=TRUE)\n> newmat <- mtrx * mtrx\n```",
        "options": [
            "",
            " <- matrix( c(3,5,8,4), nrow= 2,ncol=2,byrow=TRUE)",
            "at <- mtrx * mtrx",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q35. Which function in R combines different values into a single object?",
        "options": [
            "connect()",
            "concat()",
            "contact()",
            "c()"
        ],
        "_ps": 3
    },
    {
        "question": "Q36. Which file contains settings that R uses for all users of a given installation of R?",
        "options": [
            "Rdefaults.site",
            "Renviron.site",
            "Rprofile.site",
            "Rstatus.site"
        ],
        "_ps": 2
    },
    {
        "question": "Q36. If **mdf** is a data frame, which statement is true ?",
        "options": [
            "**ncol(mdf)** equals **length(mdf)**.",
            "The number of rows must equals the number of columns.",
            "The legnth of any column in **mdf** may differ from any other column in **mdf**",
            "All columns must have the same data type."
        ],
        "_ps": 0
    },
    {
        "question": "Q37. A list can contain a list as an element. **MyList** has five columns, and the third column's item is a list of three items. How do you put all seven values in **MyList** into a single vector?",
        "options": [
            "vector(MyList, length = 7)",
            "coerce(MyList, nrows = 1)",
            "unlist(MyList)",
            "coerce(MyList, nrows = 7)"
        ],
        "_ps": 2
    },
    {
        "question": "Q38. Which strings could be returned by the function ls(path = \"^V\")?",
        "options": [
            "ANOVAData, anovadata",
            "VisitPCA, VarX",
            "VisitPCA, varx",
            "Xvar, Yvar"
        ],
        "_ps": 1
    },
    {
        "question": "Q39. StDf is a data frame. Based on this knowledge, what does this statement return?\n```r\nStDf[, -1]\n```",
        "options": [
            "",
            " -1]",
            "",
            "all but the first row and first column of StDf"
        ],
        "_ps": -1
    },
    {
        "question": "Q40. Which statement enables you to interactively open a single file?",
        "options": [
            "file.list()",
            "file.select()",
            "file.choose()",
            "file.open()"
        ],
        "_ps": 2
    },
    {
        "question": "Q41. How are these data types alike: logical, integer, numeric, and character?",
        "options": [
            "Each is a type of data frame.",
            "Each is a type of atomic vector.",
            "Each is a type of complex vector.",
            "Each is a type of raw vector."
        ],
        "_ps": 1
    },
    {
        "question": "Q42. What does the `MyMat[ ,3]` subsetting operation return for this code?\n```r\nMyMat = matrix(c(7, 9, 8, 6, 10, 12),nrow=2,ncol=3, byrow = TRUE)\n```\n```\n[ ,3]\n[1, ] 8\n[2, ] 12\n```\n```\n[1] 8 12\n```\n```\n[1] 10 12\n```",
        "options": [
            "",
            "= matrix(c(7, 9, 8, 6, 10, 12),nrow=2,ncol=3, byrow = TRUE)",
            "",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q43. What does the function `power.anova.test` return?",
        "options": [
            "the probability of making a Type I error",
            "the probability of not making a Type II error",
            "the probability of making a Type II error",
            "the probability of not making a Type I error"
        ],
        "_ps": 1
    },
    {
        "question": "Q44. Review the statement below. What is the effect of `covariate:factor` on the analysis?\n```r\nresult <- lm(outcome ~ covariate + factor + covariate:factor, data = testcoef)\n```",
        "options": [
            "",
            " <- lm(outcome ~ covariate + factor + covariate:factor, data = testcoef)",
            "",
            "It forces the intercepts of the individual regressions to zero."
        ],
        "_ps": -1
    },
    {
        "question": "Q45. A variable whose type is numeric can contain which items?",
        "options": [
            "integers and real values",
            "integers, real, and raw values",
            "real values only",
            "integers, real, and logical values"
        ],
        "_ps": 2
    },
    {
        "question": "Q46. What is the legitimate name of a data class in R?",
        "options": [
            "property",
            "integer",
            "number",
            "variant"
        ],
        "_ps": 1
    },
    {
        "question": "Q47. How do you extract the values above the main diagonal from a square matrix named `Rmat`?",
        "options": [
            "`Rmat[upper.tri(Rmat)]`",
            "`upper.triangular(Rmat)`",
            "`upper.tri(Rmat)`",
            "`upper.diag(Rmat)`"
        ],
        "_ps": 0
    },
    {
        "question": "Q48. `x` is a vector of type integer, as shown on line 1 below. What is the type of the result returned by the statement > median(x)?\n`x <- c(12L, 6L, 10L, 8L, 15L, 14L, 19L, 18L, 23L, 59L)`",
        "options": [
            "c(12L, 6L, 10L, 8L, 15L, 14L, 19L, 18L, 23L, 59L)`",
            "numeric",
            "integer",
            "single"
        ],
        "_ps": -1
    },
    {
        "question": "Q49. A list named `a` is created using the statement below. Which choice returns TRUE?\n`a <- list(\"10\", TRUE, 5.6)`",
        "options": [
            "list(\"10\", TRUE, 5.6)`",
            "is.list(a[1])",
            "is.numeric(a[1])",
            "is.logical(a[1])"
        ],
        "_ps": 1
    },
    {
        "question": "Q50. How do you return \"October\" from `x` in this code?\n`x <- as.Date(\"2018-10-01\")`",
        "options": [
            "as.Date(\"2018-10-01\")`",
            "as.month(x)",
            "months(x)",
            "month(x)"
        ],
        "_ps": 2
    },
    {
        "question": "Q52. Which function returns `[1] TRUE FALSE TRUE`?\n`indat <- c(\"Ash Rd\",\"Ash Cir\",\"Ash St\")`",
        "options": [
            " <- c(\"Ash Rd\",\"Ash Cir\",\"Ash St\")`",
            "grepl(\"[Rd|Ave|Dr|St]\", indat)",
            "grepl(\"Rd|Ave|Dr|St\", indat)",
            "grepl(\"Rd,Ave,Dr,St\", indat)"
        ],
        "_ps": 2
    }
]