[
    {
        "question": "Q1. What is the purpose of the ViewChild decorator in this component class?",
        "options": [
            "ularjs",
            "nent({",
            ".",
            "mplate: '<p #bio></p>'"
        ],
        "_ps": -1
    },
    {
        "question": "Q2. What method is used to wire up a FormControl to a native DOM input element in reactive forms?",
        "options": [
            "Add the string name given to the FormControl to an attribute named controls on the <form> element to indicate what fields it should include.",
            "Use the square bracket binding syntax around the value attribute on the DOM element and set that equal to an instance of the FormControl.",
            "Use the formControlName directive and set the value equal to the string name given to the FormControl.",
            "Use the string name given to the FormControl as the value for the DOM element id attribute."
        ],
        "_ps": 2
    },
    {
        "question": "Q3. What is the difference between the `paramMap` and the `queryParamMap` on the `ActivatedRoute` class?",
        "options": [
            "The paramMap is an object literal of the parameters in a route's URL path. The queryParamMap is an Observable of those same parameters.",
            "The paramMap is an Observable that contains the parameter values that are part of a route's URL path. The queryParamMap is a method that takes in an array of keys and is used to find specific parameters in the paramMap.",
            "paramMap is the legacy name from Angular 3. The new name is queryParamMap.",
            "Both are Observables containing values from the requested route's URL string. The paramMap contains the parameter values that are in the URL path and the queryParamMap contains the URL query parameters."
        ],
        "_ps": 3
    },
    {
        "question": "Q4. Based on the following usage of the async pipe, and assuming the users class field is an Observable, how many subscriptions to the users Observable are being made?",
        "options": [
            "l",
            "mes</h2>",
            "ngFor=\"let user of users | async\">{{ user.name }}</div>",
            "es</h2>"
        ],
        "_ps": -1
    },
    {
        "question": "Q5. How can you use the HttpClient to send a POST request to an endpoint from within an addOrder function in this OrderService?",
        "options": [
            "ularjs",
            " class OrderService {",
            "nstructor(private httpClient: HttpClient) { }",
            "dOrder(order: Order) {"
        ],
        "_ps": -1
    },
    {
        "question": "Q6. What is the RouterModule.forRoot method used for?",
        "options": [
            "Registering any providers that you intend to use in routed components.",
            "Registering route definitions at the root application level.",
            "Indicating that Angular should cheer on your routes to be successful.",
            "Declaring that you intend to use routing only at the root level."
        ],
        "_ps": 1
    },
    {
        "question": "Q7. Which DOM elements will this component metadata selector match on?",
        "options": [
            "ularjs",
            "nent({",
            "lector: 'app-user-card',",
            ". ."
        ],
        "_ps": -1
    },
    {
        "question": "Q8. What is the correct template syntax for using the built-in ngFor structural directive to render out a list of productNames?",
        "options": [
            "",
            "l",
            "",
            "[ngFor]=\"let productName of productNames\">{{ productName }}</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q9. What are the two component decorator metadata properties used to set up CSS styles for a component?",
        "options": [
            "viewEncapsulation and viewEncapsulationFiles.",
            "There is only one and it is the property named css.",
            "css and cssUrl.",
            "styles and styleUrls."
        ],
        "_ps": 3
    },
    {
        "question": "Q10. With the following component class, what template syntax would you use in the template to display the value of the title class field?",
        "options": [
            "ascript",
            "nent({",
            "ctor: 'app-title-card',",
            "late: '',"
        ],
        "_ps": -1
    },
    {
        "question": "Q11. What is the purpose of the valueChanges method on a FormControl?",
        "options": [
            "It is used to configure what values are allowed for the control.",
            "It is used to change the value of a control to a new value. You would call that method and pass in the new value for the form field. It even supports passing in an array of values that can be set over time.",
            "It returns a Boolean based on if the value of the control is different from the value with which it was initialized.",
            "It is an observable that emits every time the value of the control changes, so you can react to new values and make logic decisions at that time."
        ],
        "_ps": 3
    },
    {
        "question": "Q12. What directive is used to link an `<a>` tag to routing?",
        "options": [
            "routeTo",
            "routerLink",
            "routePath",
            "appLink"
        ],
        "_ps": 1
    },
    {
        "question": "Q13. What is the Output decorator used for in this component class?",
        "options": [
            "ascript",
            "nent({",
            "lector: 'app-shopping-cart',",
            ". ."
        ],
        "_ps": -1
    },
    {
        "question": "Q14. What is the difference between these two markup examples for conditionally handling display?",
        "options": [
            "l",
            "ngIf=\"isVisible\">Active</div>",
            "hidden]=\"!isVisible\">Active</div>",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q15. How can you disable the submit button when the form has errors in this template-driven forms example?",
        "options": [
            "l",
            "#userForm=\"ngForm\">",
            "ut type=\"text\" ngModel name=\"firstName\" required />",
            "ut type=\"text\" ngModel name=\"lastName\" required />"
        ],
        "_ps": -1
    },
    {
        "question": "Q16. You want to see what files would be generated by creating a new contact-card component. Which command would you use?",
        "options": [
            "ng generate component contact-card --dry-run",
            "ng generate component contact-card --no-files",
            "ng generate component component --dry",
            "ng generate component --exclude"
        ],
        "_ps": 0
    },
    {
        "question": "Q17. Based on the following component, what template syntax would you use to bind the TitleCardComponent's titleText field to the h1 element title property?",
        "options": [
            "ascript",
            "nent({",
            "ctor: 'app-title-card',",
            "late: '<h1 title=\"User Data\"> {{titleText}}</h1>',"
        ],
        "_ps": -1
    },
    {
        "question": "Q18. What are Angular lifecycle hooks?",
        "options": [
            "loggers for tracking the health of an Angular app",
            "providers that can be used to track the instances of components",
            "built-in pipes that can be used in templates for DOM events",
            "reserved named methods for components and directives that Angular will call during set times in its execution, and can be used to tap into those lifecycle moments"
        ],
        "_ps": 3
    },
    {
        "question": "Q19. Pick the best description for this template syntax code:",
        "options": [
            "l",
            "Boss: {{job?.bossName}} </span>",
            "",
            "The ? is shorthand for the async pipe. The job value must be an Observable."
        ],
        "_ps": -1
    },
    {
        "question": "Q20. How would you configure a route definition for a UserDetailComponent that supports the URL path user/23 (where 23 represents the id of the requested user)?",
        "options": [
            "`{ path: 'user/:id', component: UserDetailComponent }`",
            "`{ url: 'user/:id', routedComponent: UserDetailComponent }`",
            "`{ routedPath: 'user/:id', component: UserDetailComponent }`",
            "`{ destination: new UserDetailComponent(), route: 'user/:id' }`"
        ],
        "_ps": 0
    },
    {
        "question": "Q21. What are the HostListener decorators and the HostBinding decorator doing in this directive?",
        "options": [
            "ascript",
            "tive({",
            "ctor: '[appCallout]',",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q22. What Angular template syntax can you use on this template-driven form field to access the field value and check for validation within the template markup?",
        "options": [
            "l",
            " type=\"text\" ngModel name=\"firstName\" required minlength=\"4\" />",
            "*ngIf=\"\">Invalid field data</span>",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q23. What is the value type that will be stored in the headerText template reference variable in this markup?",
        "options": [
            "l",
            "eaderText>User List</h1>",
            "",
            "an Angular ElementRef, a wrapper around a native element"
        ],
        "_ps": 3
    },
    {
        "question": "Q24. What is the difference, if any, of the resulting code logic based on these two provider configurations?",
        "options": [
            "ascript",
            "vide: FormattedLogger, useClass: Logger }][{ provide: FormattedLogger, useExisting: Logger }];",
            "",
            "They are the same. Both will result in a new instance of Logger that is bound to the FormattedLogger token."
        ],
        "_ps": -1
    },
    {
        "question": "Q25. What is the purpose of the data property (seen in the example below) in a route configuration?",
        "options": [
            "ascript",
            "",
            " path: 'customers',",
            " component: CustomerListComponent,"
        ],
        "_ps": -1
    },
    {
        "question": "Q26. How does the built-in `ngIf` structural directive change the rendered DOM based on this template syntax?",
        "options": [
            "ascript",
            "nent({",
            "ctor: 'app-product',",
            "late: '<div *ngIf=\"product\">{{ product.name }}</div>',"
        ],
        "_ps": -1
    },
    {
        "question": "Q27. What does this code accomplish?",
        "options": [
            "ascript",
            "ule({",
            "arations: [AppComponent],",
            "rts: [BrowserModule],"
        ],
        "_ps": -1
    },
    {
        "question": "Q28. Which choice best describes what the _resolve_ property does in this route configuration?",
        "options": [
            "ascript",
            "",
            "h: ':id',",
            "ponent: UserComponent,"
        ],
        "_ps": -1
    },
    {
        "question": "Q29. What is the purpose of the ContentChildren decorator in this component class?",
        "options": [
            "ascript",
            "nent({",
            "",
            "ate: '<ng-content></ng-content›'"
        ],
        "_ps": -1
    },
    {
        "question": "Q30. In order for Angular to process components in an application, where do the component types need to be registered?",
        "options": [
            "within a script tag in the index.html file",
            "in an NgModule decorator metadata tag named _components_",
            "No registration is needed simply include the component files in an app directory.",
            "in an NgModule decorator metadata property named _declarations_"
        ],
        "_ps": 3
    },
    {
        "question": "Q31. What is the purpose of the `fixture.detectChanges()` call in this unit test?",
        "options": [
            "ascript",
            "d.configureTestingModule({",
            "arations: [UserCardComponent],",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q32. What will the URL segment look like based on the following call to the `Router.navigate` method when goToUser is passed the value 15?",
        "options": [
            "ascript",
            " class ToolsComponent {",
            "ructor (private router: Router) { }",
            "ser (id: number) {"
        ],
        "_ps": -1
    },
    {
        "question": "Q33. When a service is provided for root and is also added to the provider's configuration for a lazy-loaded module, what instance of that service does the injector provide to constructors in the lazy-loaded module?",
        "options": [
            "A new instance of that service is created when the module is lazy loaded.",
            "Providing a service of the same type at a lazy-loaded module level is not allowed.",
            "If an instance of the service has not been created at the root level yet. it will create one there and then use it.",
            "A single instance of that service is always instantiated at root and is the only one ever used, including within lazy modules."
        ],
        "_ps": 0
    },
    {
        "question": "Q34. What is the HostBinding decorator doing in this directive?",
        "options": [
            "ascript",
            "tive({",
            "ctor: ' [appHighlight] ',",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q35. In reactive forms, what Angular form class type is used on the native DOM <form> element to wire it up?",
        "options": [
            "`FormArray`",
            "`FormControl`",
            "`FormGroup`",
            "`all of these answers`"
        ],
        "_ps": 2
    },
    {
        "question": "Q36. Assuming the username FormControl has been configured with a minLength validator, how can you set up an error display in the following reactive forms markup for the username field?",
        "options": [
            "l",
            "[formGroup]=\"form\"›",
            "ut type=\"text\" formControlName= \"username\"›",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q37. How does the emulated view encapsulation mode handle CSS for a component?",
        "options": [
            "It renders the CSS exactly how you wrote it without any changes.",
            "It makes use of shadow DOM markup and CSS.",
            "It creates unique attributes for DOM elements and scopes the CSS selectors you write to those attribute ids.",
            "It renders all of the CSS rules you write as inline CSS on all of the DOM elements you use them on in the template."
        ],
        "_ps": 2
    },
    {
        "question": "Q38. With the following TestBed setup, what can be used to access the rendered DOM for the UserCardComponent?",
        "options": [
            "ascript",
            "d.configureTestingModule({",
            "arations: [UserCardComponent],",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q39. Given these two components, what will get rendered to the DOM based on the markup usage?",
        "options": [
            "ascript",
            "nent({",
            "tor: 'app-card',",
            "ate: '<h1>Data Card</h1><ng-content></ng-content>'"
        ],
        "_ps": -1
    },
    {
        "question": "Q40. Given the app-title-card component in the code below, what DOM will the app-user-card component render?",
        "options": [
            "ascript",
            "nent({",
            "ector: 'app-user-card',",
            "plate: '<app-title-card></app-title-card><p>3enny Smith</p>'"
        ],
        "_ps": -1
    },
    {
        "question": "Q41. Pick the matching code for the custom provider registration that the @Inject () decorator is looking for:",
        "options": [
            "ascript",
            "uctor(@Inject('Logger') private logger) { }",
            "",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q42. Which choice best describes the following usage of the HttpClient . get method in the getsettings class method?",
        "options": [
            "ascript",
            " class SettingsService {",
            "nstructor(private httpClient: HttpClient) { }",
            "."
        ],
        "_ps": -1
    },
    {
        "question": "Q43. When a service requires some setup to initialize its default state through a method, how can you make sure that said method is invoked before the service gets injected anywhere?",
        "options": [
            "Put the logic of that service method into the service constructor instead.",
            "Use a factory provider at the root AppModule level that depends on the service to call that service method.",
            "it is not possible to do it at application start; you can do it only at a component level.",
            "Instantiate an instance of the service at the global level (window scope) and then call that method."
        ],
        "_ps": 1
    },
    {
        "question": "Q44. What statement best describes this usage of the TestBed?",
        "options": [
            "ascript",
            "spy = jasmine.createSpyObj('DataService', ['getUsersFromApi']);",
            "d.configureTestingModule({",
            "iders: [UserService, { provide: DataService, useValue: spy }],"
        ],
        "_ps": -1
    },
    {
        "question": "Q45. What is the primary difference between a component and a directive?",
        "options": [
            "A component uses a selector metadata property and a directive does not.",
            "A directive can be used for adding custom events to the DOM and a component cannot.",
            "A component has a template and a directive does not.",
            "A directive can target only native DOM elements."
        ],
        "_ps": 2
    },
    {
        "question": "Q46. What could you add to this directive class to allow the truncate length to be set during directive usage in markup?",
        "options": [
            "",
            "tive({",
            "lector: '[appTruncate]'",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q47. How can you pass query parameters to this `HttpClient.get` request?",
        "options": [
            "",
            " class OrderService {",
            "nstructor(private httpClient: HttpClient) { }",
            "tOrdersByYear(year: number): Observable<Order[]> {"
        ],
        "_ps": -1
    },
    {
        "question": "Q48. Assuming the `DataService` has been registered in the providers for the application, which answer best describes what happens based on this component's constructor?",
        "options": [
            "",
            "nent({",
            ".",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q49. Finish this markup using the `ngIf` directive to implement an else case that will display the text \"User is not active\":",
        "options": [
            "ular2html",
            "ngIf=\"userIsActive; else inactive\">",
            "ently active!",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q50. What is the correct syntax for a route definition to lazy load a feature module?",
        "options": [
            "",
            "",
            "",
            "th: 'users',"
        ],
        "_ps": -1
    },
    {
        "question": "Q51. Describe how the validation is set up and configured in this reactive forms example:",
        "options": [
            "",
            " class UserFormControl implements OnInit {",
            ".",
            "OnInit() {"
        ],
        "_ps": -1
    },
    {
        "question": "Q52. What does the Injectable decorator do on this service class?",
        "options": [
            "",
            "table({",
            "ovidedIn: 'root'",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q53. Describe the usage of this code",
        "options": [
            "",
            " interface AppSettings {",
            ": string;",
            "on: number;"
        ],
        "_ps": -1
    },
    {
        "question": "Q54. For the following template-driven forms example, what argument can be passed to the submit method in the click event to submit the data for the form?",
        "options": [
            "",
            "#form=\"ngForm\">",
            "t type=\"text\" ngModel=\"firstName\">",
            "t type=\"text\" ngModel=\"lastName\">"
        ],
        "_ps": -1
    },
    {
        "question": "Q54. What is the purpose of the prelodingStrategy property configuration in this router code?",
        "options": [
            "",
            "Module.forRoot (",
            "",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q55. What is an alternative way to write this markup to bind the value of the class field `userName` to the `h1` element title property?",
        "options": [
            "l",
            "itle]=\"userName\">Current user is {{ userName }}</h1>",
            "",
            "title=\"userName\""
        ],
        "_ps": -1
    },
    {
        "question": "Q56. What is the `async` pipe doing in this example?",
        "options": [
            "",
            "nent({",
            "ctor: 'app-users',",
            "late: '<div *ngFor=\"let user of users | async\">{{ user.name }}</div>',"
        ],
        "_ps": -1
    },
    {
        "question": "Q57. How would you make use of this directive in markup based on its selector value",
        "options": [
            "",
            "tive({",
            "tor: '[appTruncate]'",
            ""
        ],
        "_ps": -1
    }
]