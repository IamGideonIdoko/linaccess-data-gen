[
    {
        "question": "Q1. What is the value of s?",
        "options": [
            "",
            "bleString *s = [NSMutableString stringWithString: @\"123\"];",
            "endString: @\"456\"];",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q2. What's the value of i after these statements?",
        "options": [
            "",
            "ng *str = nil;",
            "ger i = str.integerValue;",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q3. What value is in str after this line in executed?",
        "options": [
            "ing str = \"test\" + \" \" + \"more\";`",
            "This code contains an error",
            "test",
            "nil"
        ],
        "_ps": 1
    },
    {
        "question": "Q4. What does this code print?",
        "options": [
            "",
            "Predicate *p2 = [NSPredicate predicateWithBlock:^BOOL(NSString*  evaluatedObject, NSDictionary<NSString *,id> * _Nullable bindings) {",
            "return evaluatedObject.intValue % 2 == 0;",
            ";"
        ],
        "_ps": -1
    },
    {
        "question": "Q5. Property defaults include \\_?",
        "options": [
            "atomic/strong",
            "atomic/weak",
            "nonatomic/weak",
            "nonatomic/strong"
        ],
        "_ps": 0
    },
    {
        "question": "Q6. What is the key difference between NSDictionary and NSMutableDictionary?",
        "options": [
            "NSMutableDictionary's values can change",
            "NSMutableDictionary has not initializers.",
            "NSDictionary can't be copied.",
            "NSDictionary's values can change."
        ],
        "_ps": 0
    },
    {
        "question": "Q7. What is foo?",
        "options": [
            "at)foo;`",
            "A function with a return type of float.",
            "This code contains an error.",
            "A variable declaration of type float."
        ],
        "_ps": 1
    },
    {
        "question": "Q8. What can you glean from this line?",
        "options": [
            "rt \"NSString+NameHelper.h\"`",
            "NameHelper is a category of NSString.",
            "NameHelper is a subclass of NSString.",
            "NSString implements the NameHelper protocol."
        ],
        "_ps": 1
    },
    {
        "question": "Q9. What's wrong with this code?",
        "options": [
            " x = 5.;`",
            "Nothing is wrong with this code.",
            "Declarations do not need semicolons.",
            "x=5 is an invalid float."
        ],
        "_ps": 1
    },
    {
        "question": "Q10. How many times with this loop be executed?",
        "options": [
            "",
            "nt x=0; x<100; x++) {",
            "x + 1;",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q11. What is this code an example of?",
        "options": [
            " addObserver: self forKeyPath: @\"val\" options:0 context: nil];`",
            "Key-Value Observing",
            "Class Value Observing",
            "Key-Data Observing"
        ],
        "_ps": 1
    },
    {
        "question": "Q12. What does ARC stand for?",
        "options": [
            "Automatic Reference Counting",
            "Automatic Retain Checking",
            "Async Retain Cycles",
            "Automatic Release Code"
        ],
        "_ps": 0
    },
    {
        "question": "Q13. What is printed for this code?",
        "options": [
            "",
            "l = 0;",
            "1.5;",
            "(\"%d\", val);"
        ],
        "_ps": -1
    },
    {
        "question": "Q14. What best describes class inheritance in Objective-C?",
        "options": [
            "single inheritance but multiple protocol implementation",
            "Objective-C doesn't support inheritance",
            "dual class inheritance",
            "unlimited class inheritance and protocol adherence"
        ],
        "_ps": 0
    },
    {
        "question": "Q15. How many keys does this NSDictionary have after this code is executed?",
        "options": [
            "tionary *dict = [[NSDictionary alloc] initWithObjectsAndKeys: @\"b\", @\"e\", @\"a\", @\"r\", nil];`",
            "2",
            "4",
            "5"
        ],
        "_ps": 1
    },
    {
        "question": "Q16. What is wrong with this code?",
        "options": [
            "",
            "bleDictionary *dict1 = [NSMutableDictionary dictionaryWithCapacity:5];",
            " setValue:@\"key\" forKey:@\"value\"];",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q17. What is printed from this code?",
        "options": [
            "",
            " *data = [@\"print\" dataUsingEncoding:NSASCIIStringEncoding];",
            "@\"%@\", [[NSString alloc] initWithData:data encoding:NSASCIIStringEncoding]);",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q18. What is different about this function?",
        "options": [
            "d)doSomething;`",
            "It is static",
            "It is abstract.",
            "It is inline."
        ],
        "_ps": 1
    },
    {
        "question": "Q19. Structs can have \\_?",
        "options": [
            "functions",
            "initializers",
            "fields",
            "all of these answers"
        ],
        "_ps": 2
    },
    {
        "question": "Q20. What is wrong with this code?",
        "options": [
            "",
            "face MyClass : NSObject",
            "roperty (strong, nonatomic, readonly) NSString *name;",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q21. What is an enums base type for the code below?",
        "options": [
            "ef enum { Foo1, Foo2} Foo;`",
            "There is no base type.",
            "NSObject",
            "int"
        ],
        "_ps": 1
    },
    {
        "question": "Q22. If you want to store a small amount of information (e.g., user settings), whats the best, built-in way to go?",
        "options": [
            "UserDefaults",
            "plist file",
            "CoreData",
            "TextFile"
        ],
        "_ps": 0
    },
    {
        "question": "Q23. What are categories used for?",
        "options": [
            "to extend other classes",
            "to manage access control",
            "to coordinate objects",
            "to group classes"
        ],
        "_ps": 0
    },
    {
        "question": "Q24. What is this Objective-C code checking?",
        "options": [
            "",
            "eyPath isInstanceOf:[NSString class]]) {",
            "",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q25. What is this a declaration of?",
        "options": [
            "foo)(int);`",
            "an Extension",
            "a Generic",
            "a block of code"
        ],
        "_ps": 3
    },
    {
        "question": "Q26. For observing changes to a property, which of these two statements cause the related method to be called and why?",
        "options": [
            "",
            "l = 1;",
            "f.val= 100;",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q27. What is wrong with this code?",
        "options": [
            "",
            "x = 2.0;",
            "oo)(int) = ^(int n1) {",
            "rn (int)(n1*x);"
        ],
        "_ps": -1
    },
    {
        "question": "Q28. What's the difference between an array and a set?",
        "options": [
            "Arrays are ordered, non-unique values.",
            "Arrays are stored sorted.",
            "Sets are ordered, unique values.",
            "Sets can contain nils."
        ],
        "_ps": 0
    },
    {
        "question": "Q29. Dot notation can be used for \\_?",
        "options": [
            "nothing, as they're never used in Objective-C",
            "function calls only",
            "property getter/setter",
            "parameter delimiters"
        ],
        "_ps": 2
    },
    {
        "question": "Q30. What is the value of newVals after this code is executed?",
        "options": [
            "",
            "Array *vals = @[@\"1\", @\"2\", @\"3\"];",
            "Predicate *pred = [NSPredicate predicateWithFormat:@\"SELF.intValue > 1\"];",
            "Array *newVals = [vals filteredArrayUsingPredicate:pred];"
        ],
        "_ps": -1
    },
    {
        "question": "Q31. How would this function be called?",
        "options": [
            ")foo:(int)a b:(int)c;`",
            "self.foo(5, b:10);",
            "This code contains an error.",
            "[self foo:5:10:20];"
        ],
        "_ps": -1
    },
    {
        "question": "Q32. What is the type of the error return value stored in json?",
        "options": [
            "",
            "Error *error;",
            "Data *data;",
            " json = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];"
        ],
        "_ps": -1
    },
    {
        "question": "Q33. What is significant about this function declaration?",
        "options": [
            "",
            "void)testFunc:(NSString**)str;",
            "",
            "The parameter is passed by value and can not be changed"
        ],
        "_ps": -1
    },
    {
        "question": "Q34. What is printed from this code execution?",
        "options": [
            "",
            "pedef enum {",
            "  thing1,",
            "  thing2,"
        ],
        "_ps": -1
    },
    {
        "question": "Q35. You are worried about threaded access to a property and possible collision in writing. What directive should you use on the property?",
        "options": [
            "non-atomic",
            "strong",
            "weak",
            "atomic"
        ],
        "_ps": 3
    },
    {
        "question": "Q36. What is wrong with this line of code?",
        "options": [
            "",
            "mp = 1==1;",
            "",
            "`temp` is a keyword."
        ],
        "_ps": -1
    },
    {
        "question": "Q37. What is special about the code within this block?",
        "options": [
            "",
            "ch_async(dispatch_get_main_queue(), ^{",
            "e",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q38. How many items are in set1 after this code executes?",
        "options": [
            "",
            "bleSet *set1 = [NSMutableSet setWithObjects: @1,@2, @3, @4, @5, nil];",
            "add0bject:@3];",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q39. What is wrong with this code?",
        "options": [
            "",
            "ionary *d1 = @[@\"v1\", @4, @\"v2\", @5.6, @\"v3\"];",
            "@\"d1: %@\", d1);",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q40. What is the initial value of the property `val`?",
        "options": [
            "",
            "rty (nonatomic, readonly) int val;",
            "",
            "8"
        ],
        "_ps": -1
    }
]