[
    {
        "question": "Q1. What's the difference between these two snippets?",
        "options": [
            "",
            "ton').on('click', function () {",
            "t('you clicked the button!');",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q2. What does the following line of code do?",
        "options": [
            "y('p')`",
            "Loads a paragraph tag from a remote server using AJAX",
            "Aliases jQuery to a variable p",
            "Selects all paragraphs on the page"
        ],
        "_ps": 3
    },
    {
        "question": "Q3. Given the following HTML, how could we use one line to hide or show the button?",
        "options": [
            "l",
            "n class=\"btn btn-primary\" type=\"submit\">Continue to checkout</button>",
            "",
            "`$('.btn-primary').toggle();`"
        ],
        "_ps": 3
    },
    {
        "question": "Q4. Working with AJAX, we may run into situations where a piece of code should not be run until after multiple AJAX calls have completed successfully. Say we need to call two external services for JSON data (a list of students, and a list of classes). And only after retrieving those data will we perform some manipulations on a page. What is the preferred way for dealing with this scenario?",
        "options": [
            "://example.com/json-api/students`  ",
            "://example.com/json-api/classes`",
            "A",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q5. Given the snippet of HTML below, what is the difference between the two lines that follow it?",
        "options": [
            "l",
            "",
            "Item 1</li>",
            "Item 2</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q6. Suppose we want to have a ball created from an HTML element (id=ball) move down and to the right from its original location when clicked, and move back into its original place when finished. Given a starting point of this, which of these snippets would accomplish that goal?",
        "options": [
            "",
            "ll').click(function () {",
            "ur code goes here",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q7. Given the following CSS and HTML codes below, how could you apply the success class to the feedback div?",
        "options": [
            "",
            "ss {",
            "r: green;",
            "ground: #ddffdd;"
        ],
        "_ps": -1
    },
    {
        "question": "Q8. The following page snippet includes a couple of messages in a list, and a code snippet that retrieves a few hundred messages from an API endpoint using AJAX. How can you add these new items to the .message-area--list element in the most performant way?",
        "options": [
            "l",
            "lass=\"message-area\">",
            "class=\"message-area--list\">",
            "i>Existing message 1</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q9. What is jQuery?",
        "options": [
            "jQuery is a bridge between Java and Javascript that makes native apps easier to write.",
            "jQuery is a plugin for JavaScript that makes database queries easier to write.",
            "jQuery is a collection of JavaScript functions that makes finding and manipulating elements on a page, AJAX, and other things easier.",
            "jQuery is a Chrome extension that allows users to create their own extensions with just a few lines of JavaScript."
        ],
        "_ps": 2
    },
    {
        "question": "Q10. We want to create a new jQuery plugin called linkUpdater that can be chained onto other jQuery selector like a normal plugin. It should update all the links in the referenced collection so they open in new windows or tabs. Below is the first cut. What is one problem with this plugin?",
        "options": [
            "",
            "strict';",
            "kUpdater = function () {",
            ".find('a').attr('target', '_blank');"
        ],
        "_ps": -1
    },
    {
        "question": "Q11. Generally speaking, when used on a web page, how should jQuery be installed, and why?",
        "options": [
            "Just before the closing body tag, because we want to avoid blocking other resources from loading, and we use the ready method to make sure our code fires after the DOM is ready",
            "Using the highest version number possible because only jQuery 3 and up are compatible with Internet Explorer 7",
            "In the head tag because we want jQuery available as soon as possible",
            "From a CDN because we want to be able to use jQuery online or offline"
        ],
        "_ps": 0
    },
    {
        "question": "Q12. Given the following HTML, how could we make this button disappear from the page using jQuery?",
        "options": [
            "l",
            "n class=\"btn btn-primary\" type=\"submit\">Continue to checkout</button>",
            "",
            "`$('.btn-primary').hide();`"
        ],
        "_ps": 3
    },
    {
        "question": "Q13. What is the difference between `$('header').html()` and `$('header').text()`?",
        "options": [
            "`$('header').html()` returns the inner HTML of the header. `$('header').text()` returns only the text",
            "`$('header').html()` returns only the HTML tags used, without the text. `$('header').text()` returns only the text",
            "`$('header').html()` strips all HTML from the header. `$('header').text()` always returns an empty string.",
            "`$('header').html()` returns all headers in an HTML document. `$('header').text()` the first line of a text file."
        ],
        "_ps": 0
    },
    {
        "question": "Q14. When writing jQuery plugins, we often provide default options that may be overridden by the end user. What jQuery function is most useful for this purpose?",
        "options": [
            "\\$.extend",
            "\\$.clone",
            "\\$.fn.extend",
            "\\$.merge"
        ],
        "_ps": 0
    },
    {
        "question": "Q15. There are times when you might want to programmatically trigger an event, instead of simply reacting to user input directly. Given this markup, Which choice will NOT cause a click event to the select box when the button is clicked?",
        "options": [
            "l",
            "le>",
            ">Here's a button you can click: <button class=\"btn\">Click Me</button></div>",
            "m>"
        ],
        "_ps": -1
    },
    {
        "question": "Q16. You have an absolutely positioned element inside a relatively positioned parent element, and you want to animate that element within its parent element. What jQuery function is most useful for finding the initial coordinates of the `.animate-me`?",
        "options": [
            "l",
            ">",
            "ent {",
            "sition: relative;"
        ],
        "_ps": -1
    },
    {
        "question": "Q17. You want to work with AJAX using a Promise-like interface instead of nested callback functions. What jQuery API should you use?",
        "options": [
            "`jQuery.sub`",
            "`jQuery.ajaxTransport`",
            "`jQuery.Deferred`",
            "`jQuery.proxy`"
        ],
        "_ps": 2
    },
    {
        "question": "Q18. What is tricky about jQuery's nth- filters (:nth-child, :nth-of-type, etc.) relative to other filters?",
        "options": [
            "Referring to lists of items, they are 1-indexed (like CSS), not 0-indexed (like JavaScript).",
            "They don't return the jQuery object, and cannot be chained.",
            "They can return the wrong items if the DOM was recently manipulated.",
            "They are not part of CSS, so they don't get the performance benefits of passing through the `document.querySelectorAll`."
        ],
        "_ps": 0
    },
    {
        "question": "Q19. jQuery's AJAX functions return objects that implement the Promise API. As a result, you can chain promises and avoid nested callbacks. What does that look like?",
        "options": [
            "A",
            "",
            "'hhttp://httpbin.org/delay/2')",
            "n(function (response) {"
        ],
        "_ps": 0
    },
    {
        "question": "Q20. You want to have a ball that is created from an HTML element (id=ball) move down and to the right of its original location when clicked, and move back to its original place when finished. What snippet, added to the code below, would do this?",
        "options": [
            "",
            "ll').click(function () {",
            "ur code goes here",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q21. The way `.wrap()` works is sometimes misunderstood. Given the DOM and jQuery snippets below, what does the modified DOM snippet look like?",
        "options": [
            "l",
            "d=\"container\">",
            " class=\"item\">Here's an item</div>",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q22. How can you select the following blockquote AND the list in a single call to jQuery() without chaining?",
        "options": [
            "l",
            "lass=\"quotes\">",
            "ckquote data-favorite=\"false\">A quote</blockquote>",
            "ckquote data-favorite=\"true\">A favorite quote</blockquote>"
        ],
        "_ps": -1
    },
    {
        "question": "Q23. Effects like show, hide, fadIn, and fadeOut can be called with no arguments, but can also take arguments for how long they should last. Which is NOT a duration argument supported by these functions?",
        "options": [
            "\"fast\"",
            "\"extreme\"",
            "2000",
            "\"slow\""
        ],
        "_ps": 1
    },
    {
        "question": "Q24. Though jQuery offers visual effects, it is considered a best practice to use CSS to set up different states triggered by classes, where it makes sense. What's the easiest way to enable and disable a class bounce on an element with the ID dialog?",
        "options": [
            "`$('#dialog').classToggle('bounce')`",
            "`$('#dialog.bounce').removeClass().addClass()`",
            "`$('#dialog').addOrRemoveClass('bounce')`",
            "`$('#dialog').toggleClass('bounce')`"
        ],
        "_ps": 3
    },
    {
        "question": "Q25. What is the main difference between selectors and filters?",
        "options": [
            "Selectors are used to refine the content that filters have been applied to.",
            "Selectors are used to find and select content in a page. Filters are used to refine the results of selectors.",
            "Filters are used to remove content from the page. Selectors are used to add content to the page",
            "There is no real difference. They are both used to build up lists of page content."
        ],
        "_ps": 1
    },
    {
        "question": "Q26. You want to create a custom right-click menu. How might you start the code?",
        "options": [
            "`$('#canvas').on('click.right', function(){ console.log('Handled a right-click') });`",
            "`$('#canvas').on('contextual', function(){ console.log('Handled a right-click') });`",
            "`$('#canvas').on('contextmenu', function(){ console.log('Handled a right-click') });`",
            "`$('#canvas').on('rightclick', function(){ console.log('Handled a right-click') });`"
        ],
        "_ps": 2
    },
    {
        "question": "Q27. What is the correct way to check how many paragraphs exist on a page using jQuery?",
        "options": [
            "`$('p').count()`",
            "`$('p').length`",
            "`$('*').find('p')`",
            "`$('p').length()`"
        ],
        "_ps": 1
    },
    {
        "question": "Q28. As with many areas of JavaScript, keeping track of the meaning of **this** is important and sometimes tricky. What does **this** mean at each of the two points in this custom plugin snippet?",
        "options": [
            "",
            "ustomPlugin = function () {",
            "oint 1",
            "rn this.each(function () {"
        ],
        "_ps": -1
    },
    {
        "question": "Q29. How can you make the first list item bold and the next item oblique, in a single statement chain?",
        "options": [
            "l",
            "ass=\"menu-first\">",
            "Item 1</li>",
            "Item 2</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q30. Which CSS selectors can you NOT use in jQuery?",
        "options": [
            "You cannot use multiple class selectors such as `.class1.class2`.",
            "You cannot use pseudo-classes such as `:not` or `:last-of-type`.",
            "You cannot use IDs and classes together, such as `#element.class`.",
            "None. All CSS selectors are compatible in jQuery."
        ],
        "_ps": 3
    },
    {
        "question": "Q31. Starting with some DOM elements in the nested structure below, you assign listeners for the same event to a child element and one of the parents using the JavaScript that follows. You want to ensure that when `.leaf` is clicked, only its event handler will be fired, instead of the click bubbling up and also firing the parent's click handler. What do you need to add to its handler function?",
        "options": [
            "l",
            "ass=\"items\" id=\"main-menu\">",
            "",
            "em 1"
        ],
        "_ps": -1
    },
    {
        "question": "Q32. Using event delegation, you can listen for events on a lot of different items without having to attach separate listeners to each one. But there are times when you may want to check the type of item receiving the event before doing anything, such as checking if an image was clicked versus a text field. Given the starter code below, which choice shows what jQuery provides to help with that process?",
        "options": [
            "l",
            "d=\"sidebar\">",
            " src=\"fancy-button.png\" alt=\"Pick Me\" />",
            "ut type=\"text\" placeholder=\"Fill in something\" />"
        ],
        "_ps": -1
    },
    {
        "question": "Q33. There are many ways to create elements that can be added to the page. Which answer is NOT one of those ways, assuming you have the following on the page?",
        "options": [
            "l",
            "d=\"elements\"></div>",
            "",
            "A"
        ],
        "_ps": -1
    },
    {
        "question": "Q34. The `.addClass()` and `.removeClass()` methods can accept functions as arguments. What does this function do?",
        "options": [
            "",
            "nu').addClass(function () {",
            "rn $('body').attr('class');",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q35. You're working on a site that uses an old version of jQuery, and you want to update to a newer version. What's the most efficient way to do so?",
        "options": [
            "Install the newer version of jQuery, go through each script one by one, and fix what looks broken.",
            "Read the change notes for the newer version of jQuery, fix all scripts, install the newer version, and fix anything that remains broken.",
            "Install the newer version of jQuery as well as its Migrate plugin, fix all warnings, and uninstall the Migrate plugin.",
            "Install the newer version of jQuery at the same time, and use `jQuery.noConflict()` on pages that need the older version."
        ],
        "_ps": 2
    },
    {
        "question": "Q36. Let's say you have a page with just one link on it. How can you change the anchor tag so it links to example.com?",
        "options": [
            "`$('a').attribute('href', 'http://www.example.com')`",
            "`$('a').attr('href', 'http://www.example.com')`",
            "`$('a').data('href', 'http://www.example.com')`",
            "`$('a').href('http://www.example.com')`"
        ],
        "_ps": 1
    },
    {
        "question": "Q37. What does `$()` mean in jQuery?",
        "options": [
            "It is an alias to the main core method of jQuery itself—the same as writing jQuery().",
            "It is a utility function that selects the first element from the document.",
            "It is a shorter way to write `document.getElementById()`.",
            "It is a utility function that selects the last element from the document."
        ],
        "_ps": 0
    },
    {
        "question": "Q38. Along with DOM traversal and manipulation, jQuery offers several general-purpose helper functions that fill in some JavaScript gaps, especially before ES2015. Which is NOT a jQuery utility function?",
        "options": [
            "`jQuery.each`, a general purpose iterator for looping over arrays or objects",
            "`jQuery.isNumeric`, which can check whether its argument is, or looks like, a number",
            "`jQuery.extend`, which can merge objects and make complete deep copies of objects",
            "`jQuery.isMobile`, which can tell whether the user is using a mobile browser"
        ],
        "_ps": 3
    },
    {
        "question": "Q39. Given this set of checkboxes, how can you select the ones that have the phrase \"sun\" as part of the value?",
        "options": [
            "l",
            " type=\"checkbox\" name=\"artists[]\" value=\"sun-ra\" />",
            " type=\"checkbox\" name=\"artists[]\" value=\"otis-redding\" />",
            " type=\"checkbox\" name=\"artists[]\" value=\"captain-beefheart\" />"
        ],
        "_ps": -1
    },
    {
        "question": "Q40. How can you get an AJAX request to go through without triggering any of jQuery's AJAX events?",
        "options": [
            "Set the type option to \"none\".",
            "Set the processData option to false.",
            "Set a success callback that returns false.",
            "Set the option \"global\" to false."
        ],
        "_ps": 3
    },
    {
        "question": "Q41. How do you change the current value of a text field with the class `.form-item` to \"555-1212\"?",
        "options": [
            "`$.val('.form-item', '555-1212');`",
            "`$('.form-item').val('555-1212');`",
            "`$('.form-item').data('value', '555-1212');`",
            "`$('.form-item').set('value', '555-1212');`"
        ],
        "_ps": 1
    },
    {
        "question": "Q42. How would you fire a callback when any AJAX request on a page has completed?",
        "options": [
            "`$('body').ajaxComplete(function() { console.count('An AJAX request completed'); });`",
            "`$(document).on('ajax-complete', function() { console.count('An AJAX request completed'); });`",
            "`$('body').on('ajaxComplete', function() { console.count('An AJAX request completed'); });`",
            "`$(document).ajaxComplete(function() { console.count('An AJAX request completed'); });`"
        ],
        "_ps": 3
    },
    {
        "question": "Q43. Given this set of checkboxes, how can you select the one with the value \"blimp\"?",
        "options": [
            "l",
            " type=\"checkbox\" name=\"songs[]\" value=\"satisfaction\" />",
            " type=\"checkbox\" name=\"songs[]\" value=\"respect\" />",
            " type=\"checkbox\" name=\"songs[]\" value=\"blimp\" />"
        ],
        "_ps": -1
    },
    {
        "question": "Q44. Given this snippet of HTML and jQuery code, what does the jQuery do?",
        "options": [
            "l",
            "ass=\"menu\">",
            "<a href=\"#\" class=\"active\">Home</a></li>",
            "<a href=\"#\">Page 2</a></li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q45. You want to take a block of type and animate it to a larger size with jQuery. The following HTML and JavaScript behaves strangely. What is the issue?",
        "options": [
            "l",
            "d=\"type\" style=\"font: 1em/1.5 helvetica, arial, sans-serif; background: #ffc; padding: 0\">",
            "ate me!",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q46. When using the `clone()` function to duplicate an element, what is one of the main concerns your code needs to watch out for?",
        "options": [
            "The `clone()` function may ignore data attributes on the original elements.",
            "The `clone()` function may result in elements with duplicate ID attributes.",
            "The `clone()` function may remove CSS classes from the cloned elements.",
            "The `clone()` function may not respect the attribute order of the original elements."
        ],
        "_ps": 1
    },
    {
        "question": "Q47. When incorporating a plugin into a project, what are the important steps for basic installation and usage?",
        "options": [
            "The jQuery script tag must come first, followed by the plugin, followed by your custom scripts, all preferably at or near the bottom of the page.",
            "Your custom scripts must appear first in the document `<head>`, followed by jQuery, followed by the plugin.",
            "The jQuery script tag and the plugin script tag must appear in the document `<head>`, and your custom scripts can follow anywhere on the page.",
            "The jQuery script tag must appear in the document `<head>`, but the plugin and your custom scripts can appear anywhere else in any order."
        ],
        "_ps": 0
    },
    {
        "question": "Q48. These two script tags show different ways of using jQuery's `ready()` method. What is true about both approaches?",
        "options": [
            "",
            "t>",
            "nction() {",
            " The rest of my code goes here"
        ],
        "_ps": -1
    },
    {
        "question": "Q49. Which property of the jQuery event object references the DOM object that dispatched an event?",
        "options": [
            "self",
            "target",
            "object",
            "source"
        ],
        "_ps": 1
    },
    {
        "question": "Q50. Which describes how jQuery makes working with the DOM faster?",
        "options": [
            "jQuery optimizes the DOM in a background thread, making updates faster.",
            "jQuery avoids using the DOM at all.",
            "jQuery uses a virtual DOM that batches updates, making inserts and deletes faster.",
            "jQuery code to perform DOM manipulation is shorter and easier to write, but does not make DOM operations faster."
        ],
        "_ps": 3
    },
    {
        "question": "Q51. There are some issues with this snippet of jQuery. First, it is manipulating CSS directly, rather than manipulating classes and leaving the CSS in stylesheets. What else in this code is best to avoid?",
        "options": [
            "",
            "em').css('background-color', 'red');",
            "e other code here",
            "rstSubItem = $('.item').find('.sub-item').get(0);"
        ],
        "_ps": -1
    },
    {
        "question": "Q52. Which choice is an example of statement chaining?",
        "options": [
            "`var $p = $('p'); console.log($p.length);`",
            "`$('p').find('a').children('li');`",
            "`$('p > a > li');`",
            "`$('p'); $('a'); $('li');`"
        ],
        "_ps": 1
    },
    {
        "question": "Q53. How can you ensure that some code executes only when a class `active` appears on an element?",
        "options": [
            "`$('.element').attr('class', 'active')`",
            "`$('.element').with('.active')`",
            "`$('.element').hasClass('active')`",
            "`$('.active').then()`"
        ],
        "_ps": 2
    },
    {
        "question": "Q54. jQuery has a main function for handling AJAX, and several shorthand function including `load()` that make calling that main function easier. Given this HTML snippet, how can you insert only the second snippet from the source.html file (`div#one`) into the `#load-me` div on-demand via AJAX?",
        "options": [
            "l",
            "d=\"load-me\">This area will be replaced with AJAX loaded content.</div>",
            "d=\"one\">",
            "First Piece</h1>"
        ],
        "_ps": -1
    },
    {
        "question": "Q55. Given this HTML list and subsequent two lines of jQuery, what is the difference in the behavior of `.closest()` and `.parents()`?",
        "options": [
            "l",
            "ass=\"items\" id=\"main-menu\">",
            "",
            "em 1"
        ],
        "_ps": -1
    },
    {
        "question": "Q56. What does this line of code do?",
        "options": [
            "",
            "> li:first-child');",
            "",
            "selects the first list item inside all unordered lists on the page"
        ],
        "_ps": 3
    },
    {
        "question": "Q57. Below is a list of items that you want to be clickable and an event handler function. How can you assign the event handler to every item in the list in a way that is most performant, and also that ensures that the handler is called even if more items are added to the list programmatically?",
        "options": [
            "l",
            "ass=\"clickable-list\">",
            "First Item</li>",
            "Second Item</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q58. What is the difference between $('p').find('a') and $('p').children('a')?",
        "options": [
            "`find() traverses only one level down, whereas children() selects anything inside the original element`",
            "`$('p').find('a') finds all paragraphs inside links, whereas $('p').children('a') finds links within paragraph tags`",
            "`.find() always searches the entire DOM tree, regardless of the original selection .children() searches only the immediate childern of an element`",
            "`children() traverses only one level down, whereas find() selects anything inside the original element`"
        ],
        "_ps": 3
    },
    {
        "question": "Q59. Consider the following markup, used to lay out three balls on the page, all hidden. How can you select the green ball, make it faded in over the course of three seconds, and log a console message when the animation has finished?",
        "options": [
            "l",
            "lass=\"balls\">",
            " class=\"ball ball--red\" style=\"display: none\"></div>",
            " class=\"ball ball--green\" style=\"display: none\"></div>"
        ],
        "_ps": -1
    },
    {
        "question": "Q60. Why might you use custom events instead of shared helper functions? For example",
        "options": [
            "aScript",
            "ment).on('myCustomEvent', function(){",
            " act on my custom event",
            ""
        ],
        "_ps": -1
    },
    {
        "question": "Q61. In the HTML and JavaScript below, the animations will all fire at once. How can you make them fire in sequence instead?",
        "options": [
            "l",
            "d=\"element-1\" class=\"animel\"></div>",
            "d=\"element-2\" class=\"animel\"></div>",
            "d=\"element-3\" class=\"animel\"></div>"
        ],
        "_ps": -1
    },
    {
        "question": "Q62. Given this checkbox, how can you determine whether a user has selected or cleared the checkbox?",
        "options": [
            "t type=\"checkbox\" id=\"same-address\" checked>`",
            "by checking the value of `$('#same-address').val()`",
            "by checking the value of `$('#same-address').prop('checked')`",
            "by checking the value of `$('#same-address').attr('checked')`"
        ],
        "_ps": 2
    },
    {
        "question": "Q63. In some projects, jQuery is not included as a file with an obvious version number (if it has been run through a minifier or other code bundler, for example). How can you detect programmatically what version of jQuery is active?",
        "options": [
            "`jQuery.version()`",
            "`jQuery.jquery`",
            "`jQuery.prototype.version`",
            "`jQuery.fn.jquery`"
        ],
        "_ps": 3
    },
    {
        "question": "Q64. Given this snippet of HTML, how can you get the value of the text field using jQuery?",
        "options": [
            "t type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"\" value=\"\" required=\"\">`",
            "`$('input[type=text]').val()`",
            "`$('.form-control').val()`",
            "`all of these answers`"
        ],
        "_ps": 3
    },
    {
        "question": "Q65. Which property of the jQuery event object references the DOM object that dispatched an event?",
        "options": [
            "target",
            "self",
            "source",
            "object"
        ],
        "_ps": 0
    },
    {
        "question": "Q66. You want to write a plugin that creates a new traversal function—such as parent() and children()—and behaves like the ones jQuery includes out of the box. It needs to correctly modify the list of selections jQuery tracks internally, build up a list of additional items, and return the merged collection. What do you need to return on the last line of the function in order for this plugin to work correctly?",
        "options": [
            "aScript",
            "yTraverse = function() {",
            "... setup",
            " additionalItems = [ /* some additional items for jQuery */ ];"
        ],
        "_ps": -1
    },
    {
        "question": "Q67. Given this snippet of HTML and jQuery code, what will the result look like?",
        "options": [
            "l",
            "ass=\"items\">",
            "class=\"active\">Item 1</li>",
            "Item 2</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q68. You have an element with a series of code (not CSS) animations applied to it that could be triggered by code you control, or other code elsewhere (such as plugins). How can you fire some code when all those animations have completed?",
        "options": [
            "A",
            "",
            "ement').on('animationend', function () {",
            "ole.log('Finally, everything is done!');"
        ],
        "_ps": -1
    },
    {
        "question": "Q69. HTML5 data attributes allow you to create valid custom attributes to store arbitrary data within DOM elements. jQuery has an API to interface with custom data such as the series of quotes below. How can you mark the second quote as your favorite?",
        "options": [
            "l",
            "lass=\"quotes\">",
            "ckquote data-favorite=\"false\">A quote</blockquote>",
            "ckquote data-favorite=\"false\">A favorite quote</blockquote>"
        ],
        "_ps": -1
    },
    {
        "question": "Q70. jQuery can create event handlers that execute exactly once. How is this done?",
        "options": [
            "`$('button').click(function() { console.log('this will only happen once'); }, false);`",
            "`$('button').on('click', function() { console.log('this will only happen once'); }).off('click');`",
            "`$('button').once('click', function() { console.log('this will only happen once'); });`",
            "`$('button').one('click', function() { console.log('this will only happen once'); });`"
        ],
        "_ps": 3
    },
    {
        "question": "Q71. You want to implement the behavior of an effect like `slideDown()` manually using `animate()`. What is one critical point you need to remember?",
        "options": [
            "`slideDown()` requires animating the background color; doing so with `animate()` requires the jQuery Color plugin.",
            "`slideDown()` includes toggling visibility automatically. `animate()` does not automatically set any properties.",
            "`slideDown()` requires the element to have a height set in pixels. `animate()` does not.",
            "Effects created with `animate()` must be run over at least 100 milliseconds, where `slideDown()` can run as quickly as 50ms."
        ],
        "_ps": 1
    },
    {
        "question": "Q72. What is the main difference between the `contents()` and `children()` functions?",
        "options": [
            "They both return the content of selected nodes, but `children()` also includes text and comment nodes.",
            "The `contents()` function only includes text nodes of the selected elements.",
            "The `children()` function only includes text nodes of the selected elements.",
            "They both return the content of selected nodes, but `contents()` also includes text and comment nodes."
        ],
        "_ps": 3
    },
    {
        "question": "Q73. If you JavaScript project involves a lot of DOM manipulation, but no AJAX or animation, which version of jQuery should you use?",
        "options": [
            "jQuery 3 compressed",
            "jQuery 3 slim",
            "jQuery 2",
            "None of these - jQuery requires AJAX"
        ],
        "_ps": 3
    },
    {
        "question": "Q74. The `.ready()` function is one of the most basic parts of jQuery, but jQuery also provides a mechanism for executing code when both one or more Promises have resolved and the DOM is ready. Which code snippet accomplishes this?",
        "options": [
            "A",
            "",
            "tion({",
            "tData : $.get('http://httpbin.org/get'),"
        ],
        "_ps": -1
    },
    {
        "question": "Q75. You want to take an element and any event handlers that go with it out of the DOM to do some work—without the changes affecting the rest of the page—and then move it somewhere else in the DOM, like right after the opening tag. What should go on the first line of this code snippet?",
        "options": [
            "",
            "t goes here?",
            " do some other hidden work on $example",
            "le.prependTo(document.body);"
        ],
        "_ps": -1
    },
    {
        "question": "Q76. Review the HTML below. You want to select the first item in the list and fade it out, then select the subsequent items up to (but not including) the active item, and fade them out halfway. How can you set up a single chain to do this?",
        "options": [
            "l",
            "ass=\"items\">",
            "Item 1</li>",
            "Item 2</li>"
        ],
        "_ps": -1
    },
    {
        "question": "Q77. What is a particular performance concern when dealing with event handlers, and how can you cope with it?",
        "options": [
            "Finding which element an event occurred on is expensive. Assign most events to document.body and use .is() to act on the element of interest.",
            "Some events, such as mousemove and scroll, happen a lot on a typical page. Debounce or throttle their handlers to make sure the handlers are not called more than you actually need.",
            "Listening for an event that does not exist can create serious memory leaks. Be careful to spell event names correctly to avoid consuming too much memory.",
            "DOM elements with an ID wil fire events more efficiently than with classes. Always use IDs instead of classes where possible."
        ],
        "_ps": 1
    }
]